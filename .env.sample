# .env file for Django Ticket System
# Copy this file to .env in your project root and update the values

# =============================================================================
# DJANGO SETTINGS
# =============================================================================

# Django Secret Key - Generate a new one for production
# You can generate one at: https://djecrety.ir/
SECRET_KEY=django-insecure-your-secret-key-here-change-this-in-production

# Debug mode - Set to False in production
DEBUG=True

# Allowed hosts - Comma separated list
DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database URL
# Format: postgresql://user:password@host:port/database_name
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/ticket_system

# Alternative individual database settings (if not using DATABASE_URL)
# DB_NAME=ticket_system
# DB_USER=postgres
# DB_PASSWORD=postgres
# DB_HOST=localhost
# DB_PORT=5432

# =============================================================================
# REDIS & CELERY CONFIGURATION
# =============================================================================

# Redis URL for caching and session storage
REDIS_URL=redis://localhost:6379/0

# Celery Broker URL (usually same as Redis)
CELERY_BROKER_URL=redis://localhost:6379/0

# Celery Result Backend
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# Email Backend
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# SMTP Settings
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_USE_SSL=False

# Email credentials
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-password

# Default from email
DEFAULT_FROM_EMAIL=Ticket System <noreply@yourdomain.com>

# For Gmail, you need to:
# 1. Enable 2-factor authentication
# 2. Generate an app password
# 3. Use the app password here, not your regular password

# Alternative email providers:
# Outlook/Hotmail:
# EMAIL_HOST=smtp-mail.outlook.com
# EMAIL_PORT=587

# Yahoo:
# EMAIL_HOST=smtp.mail.yahoo.com
# EMAIL_PORT=587

# SendGrid:
# EMAIL_HOST=smtp.sendgrid.net
# EMAIL_PORT=587
# EMAIL_HOST_USER=apikey
# EMAIL_HOST_PASSWORD=your-sendgrid-api-key

# =============================================================================
# MONITORING & LOGGING
# =============================================================================

# Sentry DSN for error tracking (optional)
# Sign up at https://sentry.io/ and get your DSN
SENTRY_DSN=

# =============================================================================
# CORS SETTINGS
# =============================================================================

# CORS allowed origins (for frontend applications)
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# =============================================================================
# MEDIA & STATIC FILES
# =============================================================================

# Media files settings
MEDIA_URL=/media/
MEDIA_ROOT=media

# Static files settings
STATIC_URL=/static/
STATIC_ROOT=staticfiles

# =============================================================================
# SECURITY SETTINGS (Production)
# =============================================================================

# SSL/HTTPS settings (set to True in production with HTTPS)
SECURE_SSL_REDIRECT=False
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False

# HSTS settings (enable in production)
SECURE_HSTS_SECONDS=0
SECURE_HSTS_INCLUDE_SUBDOMAINS=False
SECURE_HSTS_PRELOAD=False

# =============================================================================
# JWT SETTINGS
# =============================================================================

# JWT token lifetimes (in minutes for access, days for refresh)
JWT_ACCESS_TOKEN_LIFETIME=60
JWT_REFRESH_TOKEN_LIFETIME=7

# =============================================================================
# FILE UPLOAD SETTINGS
# =============================================================================

# Maximum file size for uploads (in bytes)
# 10MB = 10 * 1024 * 1024
MAX_UPLOAD_SIZE=10485760

# Allowed file extensions for ticket attachments
ALLOWED_EXTENSIONS=pdf,doc,docx,txt,png,jpg,jpeg,gif,zip,rar

# =============================================================================
# NOTIFICATION SETTINGS
# =============================================================================

# Default notification settings
SEND_EMAIL_NOTIFICATIONS=True
SEND_SMS_NOTIFICATIONS=False

# Notification delays (in minutes)
TICKET_CREATED_DELAY=0
TICKET_UPDATED_DELAY=5
TICKET_ASSIGNED_DELAY=0

# =============================================================================
# TIMEZONE SETTINGS
# =============================================================================

# Default timezone
TIME_ZONE=UTC

# Use timezone-aware datetime objects
USE_TZ=True

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Django Debug Toolbar (development only)
USE_DEBUG_TOOLBAR=True

# Django Extensions
USE_DJANGO_EXTENSIONS=True

# =============================================================================
# BACKUP SETTINGS
# =============================================================================

# Database backup settings
BACKUP_ENABLED=False
BACKUP_LOCATION=/backups/
BACKUP_RETENTION_DAYS=30

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Twilio (for SMS notifications)
TWILIO_ACCOUNT_SID=
TWILIO_AUTH_TOKEN=
TWILIO_PHONE_NUMBER=

# AWS S3 (for file storage - optional)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_STORAGE_BUCKET_NAME=
AWS_S3_REGION_NAME=us-east-1
AWS_S3_CUSTOM_DOMAIN=

# =============================================================================
# DOCKER-SPECIFIC SETTINGS
# =============================================================================

# These settings are used when running with Docker
# You can override the above settings for Docker environment

# Database URL for Docker
# DATABASE_URL=postgresql://postgres:postgres@db:5432/ticket_system

# Redis URL for Docker
# REDIS_URL=redis://redis:6379/0
# CELERY_BROKER_URL=redis://redis:6379/0

# =============================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# =============================================================================

# You can create additional .env files for different environments:
# .env.development
# .env.staging
# .env.production

# Load them using: python-decouple with specific env files
# Example: config('DEBUG', default=False, cast=bool)

# =============================================================================
# SAMPLE PRODUCTION VALUES
# =============================================================================

# For production, use these types of values:
# DEBUG=False
# SECRET_KEY=your-super-secret-production-key-here
# ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com
# DATABASE_URL=postgresql://user:pass@your-db-host:5432/ticket_system_prod
# REDIS_URL=redis://your-redis-host:6379/0
# EMAIL_HOST_USER=your-production-email@yourdomain.com
# EMAIL_HOST_PASSWORD=your-production-email-password
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
# SECURE_SSL_REDIRECT=True
# SESSION_COOKIE_SECURE=True
# CSRF_COOKIE_SECURE=True
# SECURE_HSTS_SECONDS=31536000
# SECURE_HSTS_INCLUDE_SUBDOMAINS=True